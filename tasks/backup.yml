### CRON CONFIGURATION ###

# https://dev.mysql.com/doc/mysql-enterprise-backup/4.0/en/mysqlbackup.privileges.html
- name: grant redmine user privs as backup administrator
  mysql_user:
    name: "{{ redmine_backup_user }}"
    host: localhost
    append_privs: yes
    priv: "*.*:RELOAD,SUPER,PROCESS,REPLICATION CLIENT"
    state: present
    password: "{{ redmine_backup_mysqlpass }}"

- name: grant redmine user privs over redminedb
  mysql_user:
    name: "{{ redmine_backup_user }}"
    host: localhost
    append_privs: yes
    priv: "redmine.*:ALL"
    state: present

- name: grant redmine user privs to backup_progress
  mysql_user:
    name: "{{ redmine_backup_user }}"
    host: localhost
    append_privs: yes
    priv: "mysql.backup_progress:SELECT,INSERT,UPDATE,CREATE,DROP"
    state: present

- name: grant redmine user privs to backup_history
  mysql_user:
    name: "{{ redmine_backup_user }}"
    host: localhost
    append_privs: yes
    priv: "mysql.backup_history:SELECT,INSERT,UPDATE,CREATE,DROP"
    state: present

- name: create redmine_backup_user on local server
  user:
    name: "{{ redmine_backup_user }}"
    comment: "redmine_backup_userr"
    groups: "www-data"
    shell: /bin/bash
    password: "{{ redmine_backup_password }}"
    generate_ssh_key: yes
    state: present
    append: yes

- name: create redmine_backup_user on remote backup_server
  user:
    name: "{{ redmine_backup_user }}"
    comment: "redmine_backup_user"
    groups: www-data
    shell: /bin/bash
    password: "{{ redmine_backup_password }}"
    generate_ssh_key: yes
    state: present
    append: yes
  when: ansible_hostname != redmine_backup_server
  become: yes
  delegate_to: "{{ redmine_backup_server }}"

# Add this step before as password was changed during install
- name: add .my.cnf file to backup user's home
  template:
    src: dot_my.cnf.j2
    dest: "/home/{{ redmine_backup_user }}/.my.cnf"
    owner: "{{ redmine_backup_user }}"
    group: "root"
    mode: 0650

- name: add .my.cnf file to redmine user's home
  template:
    src: dot_my.cnf.j2
    dest: "/home/{{ redmine_system_user }}/.my.cnf"
    owner: "redmine"
    group: "root"
    mode: 0650

- name: allow redmine user to restart service apache2 after restore
  lineinfile:
    dest="/etc/sudoers" regexp='{{ item.src }}' line="{{ item.value }}"
  with_items:
      - src: "^redmine ALL=NOPASSWD:/usr/sbin/service apache2"
        value: "redmine ALL=NOPASSWD:/usr/sbin/service apache2 *"

      - src: '^redmine ALL=NOPASSWD:/bin/chown www-data\\:www-data -R {{ redmine_files }}'
        value: 'redmine ALL=NOPASSWD:/bin/chown www-data\:www-data -R {{ redmine_files }}'

      - src: '^redmine ALL=NOPASSWD:/bin/chmod 775 -R {{ redmine_files }}'
        value: 'redmine ALL=NOPASSWD:/bin/chmod 775 -R {{ redmine_files }}'

- name: read ssh_host_key
  command: "ssh-keyscan -t rsa {{ redmine_backup_server }}"
  register: ssh_backup_host_key
  changed_when: false

- name: Add backup server to known_hosts
  known_hosts:
    name: "{{ redmine_backup_server }}"
    key: "{{ ssh_backup_host_key.stdout }}"
    state: present
  become_user: "{{ redmine_backup_user }}"
  become: yes

- name: read the ssh key to authorize
  shell: "cat $HOME/.ssh/id_rsa.pub"
  register: backup_user_key
  changed_when: false
  become_user: "{{ redmine_backup_user }}"
  become: yes

- name: authorize ssh_key on remote server
  authorized_key:
    user: "{{ redmine_backup_user }}"
    key: "{{ backup_user_key.stdout }}"
  delegate_to: "{{ redmine_backup_server }}"

- name: install custom scripts
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: 'root'
    group: 'root'
    mode: 0755
  with_items:
    - { src: 'redmine_back.j2', dest: '{{ redmine_custom_shared_dir }}/redmine_back' }

- name: link scripts to bin path
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  with_items:
    - { src: '{{ redmine_custom_shared_dir }}/redmine_back', dest: '{{ usr_local_bin }}/redmine_back' }

- cron: name='redmine backup 7am'
        job='{{ usr_local_bin }}/redmine_back'
        user='{{ redmine_backup_user }}'
        cron_file='redmine_backup'
        weekday='*'
        hour='7'
        minute='0'
